
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nluwegaxtjekbpccjuxt.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5sdXdlZ2F4dGpla2JwY2NqdXh0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA1NDQxMzEsImV4cCI6MjA1NjEyMDEzMX0.ZEE901-T8RfG8JVY5Q5umChmaZpmDM9BRpE3db8s5YQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Check if the Supabase connection is working
 * @param silent - If true, will not log errors to console
 * @returns Promise<boolean> - True if connection is working, false otherwise
 */
export const checkSupabaseConnection = async (silent: boolean = false): Promise<boolean> => {
  try {
    // Try to make a simple query to check connection
    const { error } = await supabase
      .from('profiles')
      .select('count(*)', { count: 'exact', head: true })
      .limit(1);
    
    if (error) {
      if (!silent) {
        console.error("Supabase connection check failed:", error.message);
      }
      return false;
    }
    
    return true;
  } catch (error) {
    if (!silent) {
      console.error("Exception during Supabase connection check:", error);
    }
    return false;
  }
};

/**
 * Attempts to reset the Supabase connection and retry
 * @returns Promise<boolean> - True if connection was restored, false otherwise
 */
export const resetConnectionAndRetry = async (): Promise<boolean> => {
  try {
    console.log("Attempting to reset Supabase connection...");
    
    // Force a new session refresh
    await supabase.auth.refreshSession();
    
    // Check if connection works after reset
    const connected = await checkSupabaseConnection();
    
    if (connected) {
      console.log("Supabase connection successfully reset");
    } else {
      console.error("Failed to reset Supabase connection");
    }
    
    return connected;
  } catch (error) {
    console.error("Error resetting Supabase connection:", error);
    return false;
  }
};
